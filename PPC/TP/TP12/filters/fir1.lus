(*
  DSP First: A Multimedia Approach, McClellan & Schafer & Yoder, 1998.
  Section 5.3.1.
 *)

open Mathext

const pi : float = 3.14159265359

node source() returns (ni : int; y : float);
var n : float;
let
  n = (-. 5.0) -> pre (n +. 1.0);
  y = if 0.0 <=. n and n <=. 40.0
      then power(1.02, n) +. 0.5 *. cos(2.0 *. pi *. n /. 8.0 +. pi /. 4.0)
      else 0.0;
  ni = round(n);
tel

node three_point_average(x : float) returns (y : float);
var x0, x1, x2 : float;
let
  x0 = x;
  x1 = 0.0 fby x0;
  x2 = 0.0 fby x1;
  y = (x0 +. x1 +. x2) /. 3.0;
tel

node seven_point_average(x : float) returns (y : float);
var x0, x1, x2, x3, x4, x5, x6 : float;
let
  x0 = x;
  x1 = 0.0 fby x0;
  x2 = 0.0 fby x1;
  x3 = 0.0 fby x2;
  x4 = 0.0 fby x3;
  x5 = 0.0 fby x4;
  x6 = 0.0 fby x5;
  y = (x0 +. x1 +. x2 +. x3 +. x4 +. x5 +. x6) /. 7.0;
tel


node system() returns (n : int; s, y : float);
let
  (n, s) = source();
  y = seven_point_average(s);
tel

